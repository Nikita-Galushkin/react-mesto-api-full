{"ast":null,"code":"import _objectSpread from\"/Users/family/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/family/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/family/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"getInitialsCards\",value:function getInitialsCards(){return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:'GET',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:'GET',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"setUserInfo\",value:function setUserInfo(info){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:'PATCH',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))}),body:JSON.stringify(info)}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"setUserAvatar\",value:function setUserAvatar(link){return fetch(\"\".concat(this._baseUrl,\"users/me/avatar\"),{method:'PATCH',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))}),body:JSON.stringify(link)}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"postCard\",value:function postCard(card){return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:'POST',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))}),body:JSON.stringify(card)}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"removeCard\",value:function removeCard(id){return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(id),{method:'DELETE',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,status){return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(cardId,\"/likes\"),{method:status?'PUT':'DELETE',headers:_objectSpread(_objectSpread({},this._headers),{},{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" - \").concat(res.statusText));});}}]);return Api;}();var api=new Api({baseUrl:'https://api.web.gavrik.students.nomoreparties.xyz/',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/family/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","options","_baseUrl","baseUrl","_headers","headers","fetch","method","localStorage","getItem","then","res","ok","json","Promise","reject","status","statusText","info","body","JSON","stringify","link","card","id","cardId","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getInitialsCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'GET',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  } \n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'GET',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  setUserInfo(info) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'PATCH',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      },\n      body: JSON.stringify(info)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  setUserAvatar(link) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      },\n      body: JSON.stringify(link)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  postCard(card) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'POST',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      },\n      body: JSON.stringify(card)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  removeCard(id) {\n    return fetch(`${this._baseUrl}cards/${id}`, {\n      method: 'DELETE',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  changeLikeCardStatus(cardId, status) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: (status) ? 'PUT' : 'DELETE',\n      headers: { \n        ...this._headers, \n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://api.web.gavrik.students.nomoreparties.xyz/',\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}